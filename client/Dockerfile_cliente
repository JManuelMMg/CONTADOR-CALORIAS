# Etapa 1: build de la aplicación React con Vite
FROM node:20-alpine AS builder

# Establece el directorio de trabajo
WORKDIR /app

# Copia package.json y package-lock.json primero para aprovechar la caché de Docker
COPY package*.json ./

# Limpia la caché de npm y instala dependencias
RUN npm cache clean --force && \
    npm install

# Copia el resto de los archivos del proyecto
COPY . .

# Compila el proyecto (typescript + vite)
RUN npm run build

# Etapa 2: servidor Nginx para producción
FROM nginx:stable-alpine

# Copia el build generado al directorio público de Nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# Crea un archivo de configuración de Nginx básico
RUN echo 'server { \
    listen 80; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html index.htm; \
        try_files $uri $uri/ /index.html; \
    } \
    # Configuración para el API proxy \
    location /api { \
        proxy_pass http://server:3001; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Expone el puerto 80 para servir la app
EXPOSE 80

# Ejecuta Nginx en primer plano
CMD ["nginx", "-g", "daemon off;"]

